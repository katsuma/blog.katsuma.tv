---
title: 3G携帯の動画を扱うためのffmpegのビルド方法
date: 2007/09/03
tags: linux
published: true

---

<p>数多くの動画フォーマット、コーデックに幅広く対応したアプリケーションといえば<a href="http://ffmpeg.mplayerhq.hu/">ffmpeg</a>がやはり一番有名だと思います。事実、ffmpegベースのアプリケーションも多く出回っていて、<a href="http://www.mplayerhq.hu/design7/news.html">mplyer</a>, <a href="http://www.forest.impress.co.jp/lib/home/ktai/ktaipic/keitaidouga.html">携帯動画変換君</a>なんかは有名だと思います。</p>  <h3>キャリア共通仕様</h3> <p>そんなffmpegですが、Linuxで１からビルドを行おうとすると、結構ハマるポイントが多いです。またバージョンによってビルド方法が異なったり、１つ違うことを行おうとするとコーデックやライブラリが不足したりし、なかなかうまくいかないことが多かったりします。そこで、今回は「3G携帯の動画を扱う」ことに特化したffmpegのビルド方法をまとめてみたいと思います。3G携帯と一口にいってもキャリアごとに利用できるフォーマットやコーデックも差異があるのですが、次のポイントを抑えれば各キャリアの（ほぼ）すべての端末に対応した動画ファイルを扱うことができます。ポイントは</p>  <ul> <li>サイズ : 176 x 144</li> <li>フォーマット : 3gp/3gpp2</li> <li>動画 : Mpeg4</li> <li>音声 : AAC / AMR</li> </ul>  <p>と、なります。DoCoMoとSoftbankは特に問題ないのですが、厄介なのはauです。</p>   <h3>auはクセがある</h3> <p>auは「低画質モード」「高画質モード」の２種類の動画を扱うことができ、それぞれで利用できるフォーマット、Codecが異なります。</p>  <p>低画質モード</p> <ul> <li>フォーマット : amc</li> <li>動画 : Mpeg4</li> <li>音声 : mp3 / Qcelp</li> </ul>  <p>高画質モード</p> <ul> <li>フォーマット : 3gpp2</li> <li>動画 : Mpeg4</li> <li>音声 : AAC / AMR</li> </ul>  <p>問題はここでのQcelpです。2007年8月末現在、ffmpegは正式にはQcelpに対応していません。「正式に」と言うのはユーザ間レベルでは<a href="http://d.hatena.ne.jp/moriyoshi/20070409">対応したような人の声</a>も出ているようですが、それでも本家コミュニティでは対応する気も無いようですし、ちょっと手を出すのも面倒そうです。なので、auは高画質モードに限定してあげると、各キャリアほぼ同じ条件にそろえることができます。</p>  <h3>作業環境</h3> <p>今回も例のごとくFedora5でいじってみます。基本的にFedora6, 7やCentOSでもそんなに変わらないと思います。必要そうなコマンドもあわせて掲載しているので他のディストリビューションでも何とか参考にはなるかと思います。</p>  <h3>目標</h3> <p>各キャリアに対応した、、と謳っても、それでは目標もあやふやなので、とりあえず各キャリアで撮影した動画ファイルから「音声部分」のみを切り取ってみたいと思います。つまりは</p>  <p>&nbsp;</p><pre>ffmpeg -i [in].3gp [out].wav<br /></pre> <p>&nbsp;</p>  <p>で、問題なくwavとして切り出すことができるように目指します。</p>  <p>また、同時にwavと静止画(jpeg)から各キャリアに3gpフォーマットの動画ファイルを作成できることも目指します。言い換えれば、動画ファイルの解析と作成、というわけですね。</p>  <h3>指針</h3> <p>流れとしては</p> <p>&nbsp;</p><ol> <li>必要コマンド、ツールのインストール（ビルド環境整備）</li> <li>必要コーデックのインストール</li> <li>オプションに注意してffmpegをビルド</li> </ol><p>&nbsp;</p>  <p>と、なります。環境によっては、1は読み飛ばしていただいても構わないと思います。</p>

<h3>必要コマンド、ツールのインストール</h3> <p>Fedoraも素の状態では開発に必要なコマンドもあまり入っていませんので、yumで入れておきます。次のものは最低限必要です。</p>  <p>&nbsp;</p><ul> <li>yum -y install dos2unix</li> <li>yum -y install automake*</li> <li>yum -y install libtool*</li> <li>yum -y install install gcc-c++</li> <li>yum install compat-gcc-32(Fedora6以前)<br />yum install compat-gcc-34(Fedora7~) // 2007/11/23追記</li> </ul><p>&nbsp;</p>  <h3>faacのインストール</h3> <p>faacはAACでエンコードを行うときに必要なライブラリです。</p> <ol> <li><del>wget http://ffmpeg.mplayerhq.hu/ffmpeg-checkout-snapshot.tar.bz2</del>(2007/9/6修正)<br /> wget http://nchc.dl.sourceforge.net/sourceforge/faac/faac-1.25.tar.gz</li> <li>cd faac</li> <li>dos2unix Makefile.am bootstrap configure.in</li> <li>./bootstrap</li> <li>./configure --prefix=/usr</li> <li>make</li> <li>make install</li> <li>/sbin/ldconfig</li> </ol>  <h3>faadのインストール</h3> <p>faadはAACでデコードを行うときに必要なライブラリです。</p><p>&nbsp;</p><ol> <li>mkdir faad</li> <li>cd faad</li> <li>wget http://darusuna.sakura.ne.jp/src/faad2-15092004.tar.gz</li> <li>tar xzfp faad*.tar.gz</li> <li>sh bootstrap</li> <li>./configure CC=gcc32(Fedora6以前)<br />./configure CC=gcc34(Fedora7以降) // 2007/11/23追記</li> <li>make</li> <li>make install</li> <li>/sbin/ldconfig</li> </ol>  <h3>amrnbのインストール</h3> <p>amrはamrnbとamrwbの2種類あります。どっちがどう違うのか、、は分からないのですがとりあえず両方インストールしておきましょう。</p> <ol> <li>wget http://ftp.penguin.cz/pub/users/utx/amr/amrnb-7.0.0.0.tar.bz2</li> <li>tar xvjf amrnb-7.0.0.0.tar.bz2</li> <li>cd amrnb-7.0.0.0</li> <li>./configure</li> <li>make</li> <li>make install</li> </ol>  <h3>amrwbのインストール</h3> <ol> <li>wget http://ftp.penguin.cz/pub/users/utx/amr/amrwb-7.0.0.2.tar.bz2</li> <li>tar xvjf amrwb-7.0.0.2.tar.bz2</li> <li>cd amrwb-7.0.0.2</li> <li>./configure</li> <li>make</li> <li>male install</li> </ol>  <h3>ffmpegのビルド</h3> <p>最新のソースコードでないとビルドできません。また少し古いソースだとconfigureの仕方も異なっているので注意しましょう。snapshotからソースを取得するのがベターです。</p> <ol> <li>wget http://ffmpeg.mplayerhq.hu/ffmpeg-checkout-snapshot.tar.bz2</li> <li>tar jxf ffmpeg-checkout-snapshot.tar.bz2</li> <li>cd ffmpeg-checkout-2007-*</li> <li>./configure --cc=gcc32 --enable-gpl --enable-libfaac --enable-libfaad --enable-libamr_wb --enable-libamr_nb(Fedora6 以前)<br />./configure --cc=gcc34 --enable-gpl --enable-libfaac --enable-libfaad --enable-libamr_wb --enable-libamr_nb(Fedora7 以降)　// 2007/11/23追記</li> <li>make</li> <li>make install</li> </ol>  <h3>LD_LIBRARY_PATHの設定</h3> <p>このままだと、まだamr系のライブラリファイルが正常にロードできずにffmpegの起動に失敗してしまいます。なので、ldconfigでライブラリを再読み込みしてあげます。</p> <ol> <li>su</li> <li>cd /etc/ld.so.conf.d</li> <li>vi ffmpeg.conf<br /> <pre>/usr/local/lib</pre> <p>の1行だけ書かれたファイルffmpeg.confを作成</p> </li> <li>/sbin/ldconfig</li> </ol>  <p>これで完成です！</p>  <h3>3gpファイルから音声を抜き出す</h3> <p>次の例では、3gpファイル「foo.3gp」から音声を抜き出して「bar.wav」で保存しています。</p> <p>&nbsp;</p><pre>ffmpeg -y -i foo.3gp bar.wav<br /></pre> <p>&nbsp;</p>  <p>-yオプションは、出力時に同一名のファイルがあった場合に強制上書きするオプションです。無くても構いません。</p>  <h3>wav + 静止画から動画を作成</h3> <p>カラオケのように（？）背景画像と音声から動画を作成することもできます。次の例ではfoo.jpgをループ再生してbar.wavと合成し、hoge.3gpを作成します。注意点として、foo.jpgは「176 x 144」のサイズでないと、DoCoMo以外のキャリア端末では再生できません。</p> <p>&nbsp;</p><pre>ffmpeg -y -f image2 -loop -shortest -i foo.jpg -i bar.wav -acodec libamr_nb -ab 4.75k -vcodec mpeg4 -f 3gp hoge.3gp<br /></pre><p>&nbsp;</p>  <p>ちなみに3gpファイルをWebサーバに設置する場合は、MIME Typeの設定を行っておく必要もあります。httpd.confや.htaccessに次の１行を追加しておきます。</p>  <p>&nbsp;</p><pre>AddType video/3gpp .3gp</pre> <p>&nbsp;</p>  <p>これで、Webサーバ上に設置した3gpファイルに携帯からアクセスすると、端末独自のPlayerが起動し、ファイルを再生できると思います。</p>  <h3>まとめ</h3> <p>ffmpegのビルドはかなり面倒です。慣れるとどうってことないのですが、コーデックの追加方法もバージョンによって異なる場合もあり、完璧な方法を見つけるまでかなり苦労しました。。こんな場合だとうまくいかないよ！などありましたらコメントやTBで教えていただければと思います。</p>
